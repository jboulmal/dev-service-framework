@startuml "../../docs/datamodel/data-objects/communication/Communication-Data-Object-Model.png"

package Communication <<Rect>> {

	class Communication {
		startingTime : date
		lastModified : date
		duration ?: date
		status : CommunicationStatus
		participants ?: Participant[]
		qos ?: CommunicationQuality
		resources : HypertyResource.HypertyResource[]
		children = ["chatmessages"]
	}

	class ChatMessages <<Children>> {
		parent = "communication"
		listener = "chatmessages"
		type : string
	}

	enum CommunicationStatus {
		OPEN
		PENDING
		CLOSED
		PAUSED
		FAILED
	}

	enum ParticipantStatus {
	}

	class Participant {
		status ?: ParticipantStatus
	}

	class CommunicationQuality {
	}

	Communication -up-|> SyncDataObject.SyncObjectParent
	ChatMessages -up-|> SyncDataObject.SyncObjectChildren
	Communication .. CommunicationStatus
	Communication .left. ChatMessages
	Communication *.. Participant
	Communication *.. CommunicationQuality
	Communication *.. Message.Message
	Participant .. ParticipantStatus
	Participant ..> HypertyResource.HypertyResource
	Participant ..> Identity.Identity

	HypertyResource ..> Connection.Connection : transportedBy
}

@enduml
