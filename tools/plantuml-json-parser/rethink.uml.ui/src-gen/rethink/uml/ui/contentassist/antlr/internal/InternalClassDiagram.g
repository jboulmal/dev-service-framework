/*
 * generated by Xtext
 */
grammar InternalClassDiagram;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package rethink.uml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package rethink.uml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import rethink.uml.services.ClassDiagramGrammarAccess;

}

@parser::members {
 
 	private ClassDiagramGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ClassDiagramGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainModel
entryRuleDomainModel 
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruleDomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainModelAccess().getGroup()); }
(rule__DomainModel__Group__0)
{ after(grammarAccess.getDomainModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getAlternatives()); }
(rule__Node__Alternatives)
{ after(grammarAccess.getNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCPackage
entryRuleCPackage 
:
{ before(grammarAccess.getCPackageRule()); }
	 ruleCPackage
{ after(grammarAccess.getCPackageRule()); } 
	 EOF 
;

// Rule CPackage
ruleCPackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCPackageAccess().getGroup()); }
(rule__CPackage__Group__0)
{ after(grammarAccess.getCPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationParse
entryRuleRelationParse 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getRelationParseRule()); }
	 ruleRelationParse
{ after(grammarAccess.getRelationParseRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RelationParse
ruleRelationParse
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationParseAccess().getAlternatives()); }
(rule__RelationParse__Alternatives)
{ after(grammarAccess.getRelationParseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleRelationType
entryRuleRelationType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RelationType
ruleRelationType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleStrongRel
entryRuleStrongRel 
:
{ before(grammarAccess.getStrongRelRule()); }
	 ruleStrongRel
{ after(grammarAccess.getStrongRelRule()); } 
	 EOF 
;

// Rule StrongRel
ruleStrongRel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStrongRelAccess().getGroup()); }
(rule__StrongRel__Group__0)
{ after(grammarAccess.getStrongRelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakRel
entryRuleWeakRel 
:
{ before(grammarAccess.getWeakRelRule()); }
	 ruleWeakRel
{ after(grammarAccess.getWeakRelRule()); } 
	 EOF 
;

// Rule WeakRel
ruleWeakRel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakRelAccess().getGroup()); }
(rule__WeakRel__Group__0)
{ after(grammarAccess.getWeakRelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumer
entryRuleEnumer 
:
{ before(grammarAccess.getEnumerRule()); }
	 ruleEnumer
{ after(grammarAccess.getEnumerRule()); } 
	 EOF 
;

// Rule Enumer
ruleEnumer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerAccess().getGroup()); }
(rule__Enumer__Group__0)
{ after(grammarAccess.getEnumerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClazz
entryRuleClazz 
:
{ before(grammarAccess.getClazzRule()); }
	 ruleClazz
{ after(grammarAccess.getClazzRule()); } 
	 EOF 
;

// Rule Clazz
ruleClazz
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClazzAccess().getGroup()); }
(rule__Clazz__Group__0)
{ after(grammarAccess.getClazzAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityList
entryRuleEntityList 
:
{ before(grammarAccess.getEntityListRule()); }
	 ruleEntityList
{ after(grammarAccess.getEntityListRule()); } 
	 EOF 
;

// Rule EntityList
ruleEntityList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityListAccess().getGroup()); }
(rule__EntityList__Group__0)
{ after(grammarAccess.getEntityListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNote
entryRuleNote 
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoteAccess().getGroup()); }
(rule__Note__Group__0)
{ after(grammarAccess.getNoteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleText
entryRuleText 
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getTextAccess().getAlternatives()); }
(rule__Text__Alternatives)
{ after(grammarAccess.getTextAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getTextAccess().getAlternatives()); }
(rule__Text__Alternatives)*
{ after(grammarAccess.getTextAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PackageStyle
rulePackageStyle
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStyleAccess().getAlternatives()); }
(rule__PackageStyle__Alternatives)
{ after(grammarAccess.getPackageStyleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompType
ruleCompType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompTypeAccess().getAlternatives()); }
(rule__CompType__Alternatives)
{ after(grammarAccess.getCompTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NotePosition
ruleNotePosition
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotePositionAccess().getAlternatives()); }
(rule__NotePosition__Alternatives)
{ after(grammarAccess.getNotePositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NativeType
ruleNativeType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getAlternatives()); }
(rule__NativeType__Alternatives)
{ after(grammarAccess.getNativeTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getRelationParserRuleCall_0()); }
	ruleRelation
{ after(grammarAccess.getElementAccess().getRelationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getNodeParserRuleCall_1()); }
	ruleNode
{ after(grammarAccess.getElementAccess().getNodeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getCPackageParserRuleCall_0()); }
	ruleCPackage
{ after(grammarAccess.getNodeAccess().getCPackageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getEntityParserRuleCall_1()); }
	ruleEntity
{ after(grammarAccess.getNodeAccess().getEntityParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNodeAccess().getNoteParserRuleCall_2()); }
	ruleNote
{ after(grammarAccess.getNodeAccess().getNoteParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEnumerParserRuleCall_0()); }
	ruleEnumer
{ after(grammarAccess.getEntityAccess().getEnumerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getClazzParserRuleCall_1()); }
	ruleClazz
{ after(grammarAccess.getEntityAccess().getClazzParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getGroup_0()); }
(rule__RelationParse__Group_0__0)
{ after(grammarAccess.getRelationParseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRelationParseAccess().getGroup_1()); }
(rule__RelationParse__Group_1__0)
{ after(grammarAccess.getRelationParseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getDirectAssignment_1_1_0()); }
(rule__RelationParse__DirectAssignment_1_1_0)
{ after(grammarAccess.getRelationParseAccess().getDirectAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getRelationParseAccess().getExtAssignment_1_1_1()); }
(rule__RelationParse__ExtAssignment_1_1_1)
{ after(grammarAccess.getRelationParseAccess().getExtAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getStrongAssignment_0()); }
(rule__RelationType__StrongAssignment_0)
{ after(grammarAccess.getRelationTypeAccess().getStrongAssignment_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getWeakAssignment_1()); }
(rule__RelationType__WeakAssignment_1)
{ after(grammarAccess.getRelationTypeAccess().getWeakAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StrongRel__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrongRelAccess().getUpKeyword_1_0()); }

	'up' 

{ after(grammarAccess.getStrongRelAccess().getUpKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getStrongRelAccess().getDownKeyword_1_1()); }

	'down' 

{ after(grammarAccess.getStrongRelAccess().getDownKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getStrongRelAccess().getLeftKeyword_1_2()); }

	'left' 

{ after(grammarAccess.getStrongRelAccess().getLeftKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getStrongRelAccess().getRightKeyword_1_3()); }

	'right' 

{ after(grammarAccess.getStrongRelAccess().getRightKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakRel__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakRelAccess().getUpKeyword_1_0()); }

	'up' 

{ after(grammarAccess.getWeakRelAccess().getUpKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getWeakRelAccess().getDownKeyword_1_1()); }

	'down' 

{ after(grammarAccess.getWeakRelAccess().getDownKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getWeakRelAccess().getLeftKeyword_1_2()); }

	'left' 

{ after(grammarAccess.getWeakRelAccess().getLeftKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getWeakRelAccess().getRightKeyword_1_3()); }

	'right' 

{ after(grammarAccess.getWeakRelAccess().getRightKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_1_0()); }
(rule__Property__Group_1_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getGroup_1_1()); }
(rule__Property__Group_1_1__0)
{ after(grammarAccess.getPropertyAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_1_0_1_1_0()); }
(rule__Property__TypeAssignment_1_0_1_1_0)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_1_0_1_1_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getEntityListAssignment_1_0_1_1_1()); }
(rule__Property__EntityListAssignment_1_0_1_1_1)
{ after(grammarAccess.getPropertyAccess().getEntityListAssignment_1_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAlternatives_1_0()); }
(rule__Note__Alternatives_1_0)
{ after(grammarAccess.getNoteAccess().getAlternatives_1_0()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_1_1()); }
(rule__Note__Group_1_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_0_0()); }
(rule__Note__Group_1_0_0__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_1_0_1()); }
(rule__Note__Group_1_0_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNativeAssignment_0_0()); }
(rule__DataType__NativeAssignment_0_0)
{ after(grammarAccess.getDataTypeAccess().getNativeAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getEntityAssignment_0_1()); }
(rule__DataType__EntityAssignment_0_1)
{ after(grammarAccess.getDataTypeAccess().getEntityAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getTextAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTextAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getTextAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_2()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTextAccess().getUpKeyword_3()); }

	'up' 

{ after(grammarAccess.getTextAccess().getUpKeyword_3()); }
)

    |(
{ before(grammarAccess.getTextAccess().getDownKeyword_4()); }

	'down' 

{ after(grammarAccess.getTextAccess().getDownKeyword_4()); }
)

    |(
{ before(grammarAccess.getTextAccess().getTopKeyword_5()); }

	'top' 

{ after(grammarAccess.getTextAccess().getTopKeyword_5()); }
)

    |(
{ before(grammarAccess.getTextAccess().getBottomKeyword_6()); }

	'bottom' 

{ after(grammarAccess.getTextAccess().getBottomKeyword_6()); }
)

    |(
{ before(grammarAccess.getTextAccess().getLeftKeyword_7()); }

	'left' 

{ after(grammarAccess.getTextAccess().getLeftKeyword_7()); }
)

    |(
{ before(grammarAccess.getTextAccess().getRightKeyword_8()); }

	'right' 

{ after(grammarAccess.getTextAccess().getRightKeyword_8()); }
)

    |(
{ before(grammarAccess.getTextAccess().getNullKeyword_9()); }

	'null' 

{ after(grammarAccess.getTextAccess().getNullKeyword_9()); }
)

    |(
{ before(grammarAccess.getTextAccess().getStringKeyword_10()); }

	'string' 

{ after(grammarAccess.getTextAccess().getStringKeyword_10()); }
)

    |(
{ before(grammarAccess.getTextAccess().getNumberKeyword_11()); }

	'number' 

{ after(grammarAccess.getTextAccess().getNumberKeyword_11()); }
)

    |(
{ before(grammarAccess.getTextAccess().getIntegerKeyword_12()); }

	'integer' 

{ after(grammarAccess.getTextAccess().getIntegerKeyword_12()); }
)

    |(
{ before(grammarAccess.getTextAccess().getBooleanKeyword_13()); }

	'boolean' 

{ after(grammarAccess.getTextAccess().getBooleanKeyword_13()); }
)

    |(
{ before(grammarAccess.getTextAccess().getDateKeyword_14()); }

	'date' 

{ after(grammarAccess.getTextAccess().getDateKeyword_14()); }
)

    |(
{ before(grammarAccess.getTextAccess().getObjectKeyword_15()); }

	'object' 

{ after(grammarAccess.getTextAccess().getObjectKeyword_15()); }
)

    |(
{ before(grammarAccess.getTextAccess().getPackageKeyword_16()); }

	'package' 

{ after(grammarAccess.getTextAccess().getPackageKeyword_16()); }
)

    |(
{ before(grammarAccess.getTextAccess().getClassKeyword_17()); }

	'class' 

{ after(grammarAccess.getTextAccess().getClassKeyword_17()); }
)

    |(
{ before(grammarAccess.getTextAccess().getEnumKeyword_18()); }

	'enum' 

{ after(grammarAccess.getTextAccess().getEnumKeyword_18()); }
)

    |(
{ before(grammarAccess.getTextAccess().getNoteKeyword_19()); }

	'note' 

{ after(grammarAccess.getTextAccess().getNoteKeyword_19()); }
)

    |(
{ before(grammarAccess.getTextAccess().getAsKeyword_20()); }

	'as' 

{ after(grammarAccess.getTextAccess().getAsKeyword_20()); }
)

    |(
{ before(grammarAccess.getTextAccess().getOfKeyword_21()); }

	'of' 

{ after(grammarAccess.getTextAccess().getOfKeyword_21()); }
)

    |(
{ before(grammarAccess.getTextAccess().getColonKeyword_22()); }

	':' 

{ after(grammarAccess.getTextAccess().getColonKeyword_22()); }
)

    |(
{ before(grammarAccess.getTextAccess().getQuestionMarkKeyword_23()); }

	'?' 

{ after(grammarAccess.getTextAccess().getQuestionMarkKeyword_23()); }
)

    |(
{ before(grammarAccess.getTextAccess().getLeftSquareBracketKeyword_24()); }

	'[' 

{ after(grammarAccess.getTextAccess().getLeftSquareBracketKeyword_24()); }
)

    |(
{ before(grammarAccess.getTextAccess().getRightSquareBracketKeyword_25()); }

	']' 

{ after(grammarAccess.getTextAccess().getRightSquareBracketKeyword_25()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStyle__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStyleAccess().getNodeEnumLiteralDeclaration_0()); }
(	'Node' 
)
{ after(grammarAccess.getPackageStyleAccess().getNodeEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPackageStyleAccess().getRectEnumLiteralDeclaration_1()); }
(	'Rect' 
)
{ after(grammarAccess.getPackageStyleAccess().getRectEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPackageStyleAccess().getFolderEnumLiteralDeclaration_2()); }
(	'Folder' 
)
{ after(grammarAccess.getPackageStyleAccess().getFolderEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPackageStyleAccess().getFrameEnumLiteralDeclaration_3()); }
(	'Frame' 
)
{ after(grammarAccess.getPackageStyleAccess().getFrameEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPackageStyleAccess().getCloudEnumLiteralDeclaration_4()); }
(	'Cloud' 
)
{ after(grammarAccess.getPackageStyleAccess().getCloudEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPackageStyleAccess().getDatabaseEnumLiteralDeclaration_5()); }
(	'Database' 
)
{ after(grammarAccess.getPackageStyleAccess().getDatabaseEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompTypeAccess().getNoneEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getCompTypeAccess().getNoneEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompTypeAccess().getCompEnumLiteralDeclaration_1()); }
(	'*' 
)
{ after(grammarAccess.getCompTypeAccess().getCompEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompTypeAccess().getAgreEnumLiteralDeclaration_2()); }
(	'o' 
)
{ after(grammarAccess.getCompTypeAccess().getAgreEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotePosition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotePositionAccess().getTopEnumLiteralDeclaration_0()); }
(	'top' 
)
{ after(grammarAccess.getNotePositionAccess().getTopEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNotePositionAccess().getBottomEnumLiteralDeclaration_1()); }
(	'bottom' 
)
{ after(grammarAccess.getNotePositionAccess().getBottomEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getNotePositionAccess().getLeftEnumLiteralDeclaration_2()); }
(	'left' 
)
{ after(grammarAccess.getNotePositionAccess().getLeftEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getNotePositionAccess().getRightEnumLiteralDeclaration_3()); }
(	'right' 
)
{ after(grammarAccess.getNotePositionAccess().getRightEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'string' 
)
{ after(grammarAccess.getNativeTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNativeTypeAccess().getNumberEnumLiteralDeclaration_1()); }
(	'number' 
)
{ after(grammarAccess.getNativeTypeAccess().getNumberEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getNativeTypeAccess().getIntegerEnumLiteralDeclaration_2()); }
(	'integer' 
)
{ after(grammarAccess.getNativeTypeAccess().getIntegerEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getNativeTypeAccess().getBooleanEnumLiteralDeclaration_3()); }
(	'boolean' 
)
{ after(grammarAccess.getNativeTypeAccess().getBooleanEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getNativeTypeAccess().getDateEnumLiteralDeclaration_4()); }
(	'date' 
)
{ after(grammarAccess.getNativeTypeAccess().getDateEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getNativeTypeAccess().getObjectEnumLiteralDeclaration_5()); }
(	'object' 
)
{ after(grammarAccess.getNativeTypeAccess().getObjectEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DomainModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModel__Group__0__Impl
	rule__DomainModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getStartumlKeyword_0()); }

	'@startuml' 

{ after(grammarAccess.getDomainModelAccess().getStartumlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModel__Group__1__Impl
	rule__DomainModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getDomainModelAction_1()); }
(

)
{ after(grammarAccess.getDomainModelAccess().getDomainModelAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModel__Group__2__Impl
	rule__DomainModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getFileAssignment_2()); }
(rule__DomainModel__FileAssignment_2)?
{ after(grammarAccess.getDomainModelAccess().getFileAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModel__Group__3__Impl
	rule__DomainModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getEND_LINETerminalRuleCall_3()); }
	RULE_END_LINE
{ after(grammarAccess.getDomainModelAccess().getEND_LINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModel__Group__4__Impl
	rule__DomainModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDomainModelAccess().getPackagesAssignment_4()); }
(rule__DomainModel__PackagesAssignment_4)
{ after(grammarAccess.getDomainModelAccess().getPackagesAssignment_4()); }
)
(
{ before(grammarAccess.getDomainModelAccess().getPackagesAssignment_4()); }
(rule__DomainModel__PackagesAssignment_4)*
{ after(grammarAccess.getDomainModelAccess().getPackagesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getEndumlKeyword_5()); }

	'@enduml' 

{ after(grammarAccess.getDomainModelAccess().getEndumlKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CPackage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__0__Impl
	rule__CPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getCPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__1__Impl
	rule__CPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getNameAssignment_1()); }
(rule__CPackage__NameAssignment_1)
{ after(grammarAccess.getCPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__2__Impl
	rule__CPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getGroup_2()); }
(rule__CPackage__Group_2__0)?
{ after(grammarAccess.getCPackageAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__3__Impl
	rule__CPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getCPackageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__4__Impl
	rule__CPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getEND_LINETerminalRuleCall_4()); }
	RULE_END_LINE
{ after(grammarAccess.getCPackageAccess().getEND_LINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__5__Impl
	rule__CPackage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getElementsAssignment_5()); }
(rule__CPackage__ElementsAssignment_5)*
{ after(grammarAccess.getCPackageAccess().getElementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__6__Impl
	rule__CPackage__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getCPackageAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getEND_LINETerminalRuleCall_7()); }
	RULE_END_LINE
{ after(grammarAccess.getCPackageAccess().getEND_LINETerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__CPackage__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group_2__0__Impl
	rule__CPackage__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getLessThanSignLessThanSignKeyword_2_0()); }

	'<<' 

{ after(grammarAccess.getCPackageAccess().getLessThanSignLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group_2__1__Impl
	rule__CPackage__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getStyleAssignment_2_1()); }
(rule__CPackage__StyleAssignment_2_1)
{ after(grammarAccess.getCPackageAccess().getStyleAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CPackage__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CPackage__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getGreaterThanSignGreaterThanSignKeyword_2_2()); }

	'>>' 

{ after(grammarAccess.getCPackageAccess().getGreaterThanSignGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeftRefAssignment_0()); }
(rule__Relation__LeftRefAssignment_0)
{ after(grammarAccess.getRelationAccess().getLeftRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelTypeAssignment_1()); }
(rule__Relation__RelTypeAssignment_1)
{ after(grammarAccess.getRelationAccess().getRelTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightRefAssignment_2()); }
(rule__Relation__RightRefAssignment_2)
{ after(grammarAccess.getRelationAccess().getRightRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_3()); }
(rule__Relation__Group_3__0)?
{ after(grammarAccess.getRelationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getEND_LINETerminalRuleCall_4()); }
	RULE_END_LINE
{ after(grammarAccess.getRelationAccess().getEND_LINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Relation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_3__0__Impl
	rule__Relation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getRelationAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getNameAssignment_3_1()); }
(rule__Relation__NameAssignment_3_1)
{ after(grammarAccess.getRelationAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationParse__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_0__0__Impl
	rule__RelationParse__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getCompAssignment_0_0()); }
(rule__RelationParse__CompAssignment_0_0)
{ after(grammarAccess.getRelationParseAccess().getCompAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_0__1__Impl
	rule__RelationParse__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getTypeAssignment_0_1()); }
(rule__RelationParse__TypeAssignment_0_1)
{ after(grammarAccess.getRelationParseAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_0__2__Impl
	rule__RelationParse__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getDirectAssignment_0_2()); }
(rule__RelationParse__DirectAssignment_0_2)?
{ after(grammarAccess.getRelationParseAccess().getDirectAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_0__3__Impl
	rule__RelationParse__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getWSTerminalRuleCall_0_3()); }
	RULE_WS
{ after(grammarAccess.getRelationParseAccess().getWSTerminalRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getMultiAssignment_0_4()); }
(rule__RelationParse__MultiAssignment_0_4)?
{ after(grammarAccess.getRelationParseAccess().getMultiAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RelationParse__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_1__0__Impl
	rule__RelationParse__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getTypeAssignment_1_0()); }
(rule__RelationParse__TypeAssignment_1_0)
{ after(grammarAccess.getRelationParseAccess().getTypeAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_1__1__Impl
	rule__RelationParse__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getAlternatives_1_1()); }
(rule__RelationParse__Alternatives_1_1)?
{ after(grammarAccess.getRelationParseAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_1__2__Impl
	rule__RelationParse__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getWSTerminalRuleCall_1_2()); }
	RULE_WS
{ after(grammarAccess.getRelationParseAccess().getWSTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationParse__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationParse__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getMultiAssignment_1_3()); }
(rule__RelationParse__MultiAssignment_1_3)?
{ after(grammarAccess.getRelationParseAccess().getMultiAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StrongRel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StrongRel__Group__0__Impl
	rule__StrongRel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongRel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrongRelAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getStrongRelAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StrongRel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StrongRel__Group__1__Impl
	rule__StrongRel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongRel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrongRelAccess().getAlternatives_1()); }
(rule__StrongRel__Alternatives_1)?
{ after(grammarAccess.getStrongRelAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StrongRel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StrongRel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StrongRel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStrongRelAccess().getHyphenMinusKeyword_2()); }
(
	'-' 
)
{ after(grammarAccess.getStrongRelAccess().getHyphenMinusKeyword_2()); }
)
(
{ before(grammarAccess.getStrongRelAccess().getHyphenMinusKeyword_2()); }
(
	'-' 
)*
{ after(grammarAccess.getStrongRelAccess().getHyphenMinusKeyword_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WeakRel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakRel__Group__0__Impl
	rule__WeakRel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakRel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakRelAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getWeakRelAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakRel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakRel__Group__1__Impl
	rule__WeakRel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakRel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakRelAccess().getAlternatives_1()); }
(rule__WeakRel__Alternatives_1)?
{ after(grammarAccess.getWeakRelAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakRel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakRel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakRel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWeakRelAccess().getFullStopKeyword_2()); }
(
	'.' 
)
{ after(grammarAccess.getWeakRelAccess().getFullStopKeyword_2()); }
)
(
{ before(grammarAccess.getWeakRelAccess().getFullStopKeyword_2()); }
(
	'.' 
)*
{ after(grammarAccess.getWeakRelAccess().getFullStopKeyword_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enumer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__0__Impl
	rule__Enumer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__1__Impl
	rule__Enumer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getNameAssignment_1()); }
(rule__Enumer__NameAssignment_1)
{ after(grammarAccess.getEnumerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__2__Impl
	rule__Enumer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumerAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__3__Impl
	rule__Enumer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getEND_LINETerminalRuleCall_3()); }
(	RULE_END_LINE)?
{ after(grammarAccess.getEnumerAccess().getEND_LINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__4__Impl
	rule__Enumer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getGroup_4()); }
(rule__Enumer__Group_4__0)*
{ after(grammarAccess.getEnumerAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__5__Impl
	rule__Enumer__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEnumerAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getEND_LINETerminalRuleCall_6()); }
	RULE_END_LINE
{ after(grammarAccess.getEnumerAccess().getEND_LINETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Enumer__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group_4__0__Impl
	rule__Enumer__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getTypesAssignment_4_0()); }
(rule__Enumer__TypesAssignment_4_0)
{ after(grammarAccess.getEnumerAccess().getTypesAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumer__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumer__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getEND_LINETerminalRuleCall_4_1()); }
(	RULE_END_LINE)?
{ after(grammarAccess.getEnumerAccess().getEND_LINETerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Clazz__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group__0__Impl
	rule__Clazz__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClazzAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group__1__Impl
	rule__Clazz__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getNameAssignment_1()); }
(rule__Clazz__NameAssignment_1)
{ after(grammarAccess.getClazzAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group__2__Impl
	rule__Clazz__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getGroup_2()); }
(rule__Clazz__Group_2__0)?
{ after(grammarAccess.getClazzAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group__3__Impl
	rule__Clazz__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getGroup_3()); }
(rule__Clazz__Group_3__0)?
{ after(grammarAccess.getClazzAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getEND_LINETerminalRuleCall_4()); }
	RULE_END_LINE
{ after(grammarAccess.getClazzAccess().getEND_LINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Clazz__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_2__0__Impl
	rule__Clazz__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getLessThanSignLessThanSignKeyword_2_0()); }

	'<<' 

{ after(grammarAccess.getClazzAccess().getLessThanSignLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_2__1__Impl
	rule__Clazz__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getStereotypeAssignment_2_1()); }
(rule__Clazz__StereotypeAssignment_2_1)
{ after(grammarAccess.getClazzAccess().getStereotypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getGreaterThanSignGreaterThanSignKeyword_2_2()); }

	'>>' 

{ after(grammarAccess.getClazzAccess().getGreaterThanSignGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Clazz__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_3__0__Impl
	rule__Clazz__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getLeftCurlyBracketKeyword_3_0()); }

	'{' 

{ after(grammarAccess.getClazzAccess().getLeftCurlyBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_3__1__Impl
	rule__Clazz__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getEND_LINETerminalRuleCall_3_1()); }
(	RULE_END_LINE)?
{ after(grammarAccess.getClazzAccess().getEND_LINETerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_3__2__Impl
	rule__Clazz__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getPropertiesAssignment_3_2()); }
(rule__Clazz__PropertiesAssignment_3_2)*
{ after(grammarAccess.getClazzAccess().getPropertiesAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clazz__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clazz__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getClazzAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
(rule__Property__NameAssignment_0)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives_1()); }
(rule__Property__Alternatives_1)
{ after(grammarAccess.getPropertyAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getEND_LINETerminalRuleCall_2()); }
	RULE_END_LINE
{ after(grammarAccess.getPropertyAccess().getEND_LINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0__0__Impl
	rule__Property__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOptionalAssignment_1_0_0()); }
(rule__Property__OptionalAssignment_1_0_0)?
{ after(grammarAccess.getPropertyAccess().getOptionalAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_1_0_1()); }
(rule__Property__Group_1_0_1__0)?
{ after(grammarAccess.getPropertyAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0_1__0__Impl
	rule__Property__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonKeyword_1_0_1_0()); }

	':' 

{ after(grammarAccess.getPropertyAccess().getColonKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives_1_0_1_1()); }
(rule__Property__Alternatives_1_0_1_1)
{ after(grammarAccess.getPropertyAccess().getAlternatives_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_1__0__Impl
	rule__Property__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getConstantAssignment_1_1_0()); }
(rule__Property__ConstantAssignment_1_1_0)
{ after(grammarAccess.getPropertyAccess().getConstantAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueAssignment_1_1_1()); }
(rule__Property__ValueAssignment_1_1_1)
{ after(grammarAccess.getPropertyAccess().getValueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EntityList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityList__Group__0__Impl
	rule__EntityList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getEntityListAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityList__Group__1__Impl
	rule__EntityList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getRefsAssignment_1()); }
(rule__EntityList__RefsAssignment_1)
{ after(grammarAccess.getEntityListAccess().getRefsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityList__Group__2__Impl
	rule__EntityList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getGroup_2()); }
(rule__EntityList__Group_2__0)*
{ after(grammarAccess.getEntityListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getEntityListAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EntityList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityList__Group_2__0__Impl
	rule__EntityList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getVerticalLineKeyword_2_0()); }

	'|' 

{ after(grammarAccess.getEntityListAccess().getVerticalLineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getRefsAssignment_2_1()); }
(rule__EntityList__RefsAssignment_2_1)
{ after(grammarAccess.getEntityListAccess().getRefsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteKeyword_0()); }

	'note' 

{ after(grammarAccess.getNoteAccess().getNoteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAlternatives_1()); }
(rule__Note__Alternatives_1)
{ after(grammarAccess.getNoteAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_0__0__Impl
	rule__Note__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getPositionAssignment_1_0_0_0()); }
(rule__Note__PositionAssignment_1_0_0_0)
{ after(grammarAccess.getNoteAccess().getPositionAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_0_0_1()); }
(rule__Note__Group_1_0_0_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_1_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_0_1__0__Impl
	rule__Note__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getColonKeyword_1_0_0_1_0()); }

	':' 

{ after(grammarAccess.getNoteAccess().getColonKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_0_1__1__Impl
	rule__Note__Group_1_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getValueAssignment_1_0_0_1_1()); }
(rule__Note__ValueAssignment_1_0_0_1_1)
{ after(grammarAccess.getNoteAccess().getValueAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_0_1_2()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__0__Impl
	rule__Note__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfKeyword_1_0_1_0()); }

	'of' 

{ after(grammarAccess.getNoteAccess().getOfKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__1__Impl
	rule__Note__Group_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfAssignment_1_0_1_1()); }
(rule__Note__OfAssignment_1_0_1_1)
{ after(grammarAccess.getNoteAccess().getOfAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__2__Impl
	rule__Note__Group_1_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_1_2()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__3__Impl
	rule__Note__Group_1_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getValueAssignment_1_0_1_3()); }
(rule__Note__ValueAssignment_1_0_1_3)
{ after(grammarAccess.getNoteAccess().getValueAssignment_1_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__4__Impl
	rule__Note__Group_1_0_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_1_4()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__5__Impl
	rule__Note__Group_1_0_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEndNoteKeyword_1_0_1_5()); }

	'end note' 

{ after(grammarAccess.getNoteAccess().getEndNoteKeyword_1_0_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_1_6()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_0_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Note__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__0__Impl
	rule__Note__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAsKeyword_1_1_0()); }

	'as' 

{ after(grammarAccess.getNoteAccess().getAsKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__1__Impl
	rule__Note__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNameAssignment_1_1_1()); }
(rule__Note__NameAssignment_1_1_1)
{ after(grammarAccess.getNoteAccess().getNameAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__2__Impl
	rule__Note__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_1_2()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__3__Impl
	rule__Note__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getValueAssignment_1_1_3()); }
(rule__Note__ValueAssignment_1_1_3)
{ after(grammarAccess.getNoteAccess().getValueAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__4__Impl
	rule__Note__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_1_4()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__5__Impl
	rule__Note__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEndNoteKeyword_1_1_5()); }

	'end note' 

{ after(grammarAccess.getNoteAccess().getEndNoteKeyword_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_1_6()); }
	RULE_END_LINE
{ after(grammarAccess.getNoteAccess().getEND_LINETerminalRuleCall_1_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives_0()); }
(rule__DataType__Alternatives_0)
{ after(grammarAccess.getDataTypeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getIsArrayAssignment_1()); }
(rule__DataType__IsArrayAssignment_1)?
{ after(grammarAccess.getDataTypeAccess().getIsArrayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DomainModel__FileAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getFileSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDomainModelAccess().getFileSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__PackagesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getPackagesCPackageParserRuleCall_4_0()); }
	ruleCPackage{ after(grammarAccess.getDomainModelAccess().getPackagesCPackageParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getCPackageAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__StyleAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getStylePackageStyleEnumRuleCall_2_1_0()); }
	rulePackageStyle{ after(grammarAccess.getCPackageAccess().getStylePackageStyleEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CPackage__ElementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCPackageAccess().getElementsElementParserRuleCall_5_0()); }
	ruleElement{ after(grammarAccess.getCPackageAccess().getElementsElementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__LeftRefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeftRefNodeCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationAccess().getLeftRefNodeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getLeftRefNodeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getLeftRefNodeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RelTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelTypeRelationParseParserRuleCall_1_0()); }
	ruleRelationParse{ after(grammarAccess.getRelationAccess().getRelTypeRelationParseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RightRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightRefNodeCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationAccess().getRightRefNodeQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getRightRefNodeQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getRightRefNodeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getNameTextParserRuleCall_3_1_0()); }
	ruleText{ after(grammarAccess.getRelationAccess().getNameTextParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__CompAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getCompCompTypeEnumRuleCall_0_0_0()); }
	ruleCompType{ after(grammarAccess.getRelationParseAccess().getCompCompTypeEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getTypeRelationTypeParserRuleCall_0_1_0()); }
	ruleRelationType{ after(grammarAccess.getRelationParseAccess().getTypeRelationTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__DirectAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_0_2_0()); }
(
{ before(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_0_2_0()); }

	'>' 

{ after(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_0_2_0()); }
)

{ after(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__MultiAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getMultiMULTITerminalRuleCall_0_4_0()); }
	RULE_MULTI{ after(grammarAccess.getRelationParseAccess().getMultiMULTITerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getTypeRelationTypeParserRuleCall_1_0_0()); }
	ruleRelationType{ after(grammarAccess.getRelationParseAccess().getTypeRelationTypeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__DirectAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_1_1_0_0()); }

	'>' 

{ after(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getRelationParseAccess().getDirectGreaterThanSignKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__ExtAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getExtVerticalLineGreaterThanSignKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getRelationParseAccess().getExtVerticalLineGreaterThanSignKeyword_1_1_1_0()); }

	'|>' 

{ after(grammarAccess.getRelationParseAccess().getExtVerticalLineGreaterThanSignKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getRelationParseAccess().getExtVerticalLineGreaterThanSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationParse__MultiAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationParseAccess().getMultiMULTITerminalRuleCall_1_3_0()); }
	RULE_MULTI{ after(grammarAccess.getRelationParseAccess().getMultiMULTITerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__StrongAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getStrongStrongRelParserRuleCall_0_0()); }
	ruleStrongRel{ after(grammarAccess.getRelationTypeAccess().getStrongStrongRelParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__WeakAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getWeakWeakRelParserRuleCall_1_0()); }
	ruleWeakRel{ after(grammarAccess.getRelationTypeAccess().getWeakWeakRelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumer__TypesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerAccess().getTypesIDTerminalRuleCall_4_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumerAccess().getTypesIDTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClazzAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__StereotypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getStereotypeTextParserRuleCall_2_1_0()); }
	ruleText{ after(grammarAccess.getClazzAccess().getStereotypeTextParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clazz__PropertiesAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClazzAccess().getPropertiesPropertyParserRuleCall_3_2_0()); }
	ruleProperty{ after(grammarAccess.getClazzAccess().getPropertiesPropertyParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__OptionalAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0_0_0()); }

	'?' 

{ after(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_1_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeDataTypeParserRuleCall_1_0_1_1_0_0()); }
	ruleDataType{ after(grammarAccess.getPropertyAccess().getTypeDataTypeParserRuleCall_1_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__EntityListAssignment_1_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getEntityListEntityListParserRuleCall_1_0_1_1_1_0()); }
	ruleEntityList{ after(grammarAccess.getPropertyAccess().getEntityListEntityListParserRuleCall_1_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ConstantAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getConstantEqualsSignKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getPropertyAccess().getConstantEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getPropertyAccess().getConstantEqualsSignKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getPropertyAccess().getConstantEqualsSignKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ValueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getValueTextParserRuleCall_1_1_1_0()); }
	ruleText{ after(grammarAccess.getPropertyAccess().getValueTextParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__RefsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getRefsEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getEntityListAccess().getRefsEntityQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEntityListAccess().getRefsEntityQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEntityListAccess().getRefsEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityList__RefsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityListAccess().getRefsEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getEntityListAccess().getRefsEntityQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEntityListAccess().getRefsEntityQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getEntityListAccess().getRefsEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__PositionAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getPositionNotePositionEnumRuleCall_1_0_0_0_0()); }
	ruleNotePosition{ after(grammarAccess.getNoteAccess().getPositionNotePositionEnumRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__ValueAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getValueTextParserRuleCall_1_0_0_1_1_0()); }
	ruleText{ after(grammarAccess.getNoteAccess().getValueTextParserRuleCall_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OfAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfEntityCrossReference_1_0_1_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getOfEntityIDTerminalRuleCall_1_0_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getOfEntityIDTerminalRuleCall_1_0_1_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getOfEntityCrossReference_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__ValueAssignment_1_0_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getValueTextParserRuleCall_1_0_1_3_0()); }
	ruleText{ after(grammarAccess.getNoteAccess().getValueTextParserRuleCall_1_0_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NameAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__ValueAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getValueTextParserRuleCall_1_1_3_0()); }
	ruleText{ after(grammarAccess.getNoteAccess().getValueTextParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NativeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNativeNativeTypeEnumRuleCall_0_0_0()); }
	ruleNativeType{ after(grammarAccess.getDataTypeAccess().getNativeNativeTypeEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__EntityAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getEntityEntityCrossReference_0_1_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getEntityEntityQualifiedNameParserRuleCall_0_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getDataTypeAccess().getEntityEntityQualifiedNameParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getDataTypeAccess().getEntityEntityCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__IsArrayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }

	'[]' 

{ after(grammarAccess.getDataTypeAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
)

{ after(grammarAccess.getDataTypeAccess().getIsArrayLeftSquareBracketRightSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_WS : (' '|'\t')+;

RULE_END_LINE : ('\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_MULTI : '"' (('0'|'1') '..')? ('1'|'*') '"';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ANY_OTHER : .;


