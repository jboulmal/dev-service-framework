{"version":3,"sources":["runtime-catalogue/RuntimeCatalogue-Local.js"],"names":["_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","exports","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_utils","require","_RuntimeCatalogue2","_RuntimeCatalogue3","RuntimeCatalogueLocal","_RuntimeCatalogue","runtimeFactory","this","getPrototypeOf","descriptorURL","createFunc","_this","Promise","resolve","reject","resourceURL","dividedURL","divideURL","type","domain","identity","resource","substring","lastIndexOf","console","log","includes","httpRequest","get","then","JSON","parse","e","hasOwnProperty","result","ERROR","_descriptor","reason","module"],"mappings":"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","file":"runtime-catalogue/RuntimeCatalogue-Local.js","sourcesContent":["import { divideURL } from '../utils/utils';\nimport RuntimeCatalogue from './RuntimeCatalogue';\n\nclass RuntimeCatalogueLocal extends RuntimeCatalogue {\n\n    constructor(runtimeFactory) {\n      super(runtimeFactory);\n    }\n\n    /**\n     * Get a Catalogue Data Object (Descriptor) from a URL, and construct it using the provided function\n     * @param {String} descriptorURL - e.g. mydomain.com/.well-known/hyperty/MyHyperty\n     * @param {function} createFunc - e.g. _createHyperty\n     * @returns {Promise}\n     */\n    getDescriptor(descriptorURL, createFunc) {\n      let _this = this;\n\n      return new Promise(function(resolve, reject) {\n\n        let resourceURL = '';\n        let dividedURL = divideURL(descriptorURL);\n        let type = dividedURL.type;\n        let domain = dividedURL.domain;\n        let identity = dividedURL.identity;\n        let resource = '';\n\n        if (!domain) {\n          domain = descriptorURL;\n        }\n\n        if (identity) {\n          identity = identity.substring(identity.lastIndexOf('/') + 1);\n        }\n\n        // type + '://' + domain + '/resources/descriptors/Hyperties.json'\n        // type + '://' + domain + '/resources/descriptors/Runtimes.json'\n        // type + '://' + domain + '/resources/descriptors/IDPProxys.json'\n        // type + '://' + domain + '/resources/descriptors/ProtoStubs.json'\n        // type + '://' + domain + '/resources/descriptors/DataSchemas.json'\n\n        console.log('DescriptorURL:', descriptorURL);\n\n        if (descriptorURL.includes('hyperty')) {\n          resource = 'Hyperties';\n          resourceURL = type + '://' + domain + '/resources/descriptors/Hyperties.json';\n        }\n\n        if (descriptorURL.includes('protocolstub') || descriptorURL.includes('ProtoStubs')) {\n          resource = 'ProtoStubs';\n          resourceURL = type + '://' + domain + '/resources/descriptors/ProtoStubs.json';\n        }\n\n        if (descriptorURL.includes('runtime')) {\n          resource = 'Runtimes';\n          resourceURL = type + '://' + domain + '/resources/descriptors/Runtimes.json';\n        }\n\n        if (descriptorURL.includes('idp-proxy')) {\n          resource = 'IDPProxys';\n          resourceURL = type + '://' + domain + '/resources/descriptors/IDPProxys.json';\n        }\n\n        if (descriptorURL.includes('dataschema')) {\n          resource = 'DataSchemas';\n          resourceURL = type + '://' + domain + '/resources/descriptors/DataSchemas.json';\n        }\n\n        _this.httpRequest.get(resourceURL).then(function(descriptor) {\n\n          try {\n            _this[resource] = JSON.parse(descriptor);\n          } catch (e) {\n            _this[resource] = descriptor;\n          }\n\n          if (!_this[resource].hasOwnProperty(identity)) {\n            reject('The ' + identity + ' is not available on ' + resource);\n          }\n\n          let result = _this[resource][identity];\n\n          if (result.ERROR) {\n            // TODO handle error properly\n            reject(result);\n          } else {\n            // FIXME hotfix for unparsed arrays (e.g. hypertyType), will be fixed in Catalogue 1.1.0\n            for (let key in result) {\n              try {\n                result[key] = JSON.parse(result[key]);\n              } catch (e) {\n                // do nothing\n              }\n            }\n\n            // console.log('creating descriptor based on: ', result);\n            let descriptor = createFunc(_this, result);\n\n            // persistenceManager.set(descriptorURL, descriptor.version, result);\n            // console.log('created descriptor object:', hyperty);\n            resolve(descriptor);\n          }\n        }).catch(function(reason) {\n          reject(reason);\n        });\n      });\n    }\n}\n\nexport default RuntimeCatalogueLocal;\n"],"sourceRoot":"/source/"}