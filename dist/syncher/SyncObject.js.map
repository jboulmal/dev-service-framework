{"version":3,"sources":["syncher/SyncObject.js"],"names":["_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","exports","value","ObjectType","ChangeType","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","require","SyncObject","initialData","this","_this","_observers","_filters","_data","deepClone","_internalObserve","Path","callback","push","path","list","split","_findWithSplit","result","last","pop","obj","forEach","event","constructor","Array","_isObservable","handler","changes","_onChanges","observe","prop","_prop","np","ArrayIndex","_this2","object","objType","OBJECT","ARRAY","type","idx","index","field","fieldString","toString","removeSize","removed","removeValues","removeIndex","_fireEvent","cType","REMOVE","oType","data","addSize","addedCount","addValues","slice","ADD","reIndexFrom","_field","name","_fieldString","indexOf","newValue","UPDATE","get","_path","_observables","array","_this3","keys","arrayIndex","nPath","clone","str"],"mappings":"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","file":"syncher/SyncObject.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\nimport {deepClone} from '../utils/utils.js';\n\n/**\n * @access private\n * Main class that maintains a JSON object, and observes changes in this object, recursively.\n * Internal objects and arrays are also observed.\n */\nclass SyncObject {\n  /* private\n    _data: any;\n    _observers: ((event: ChangeEvent) => void)[]\n  */\n\n  constructor(initialData) {\n    let _this = this;\n\n    _this._observers = [];\n    _this._filters = {};\n\n    if (initialData) {\n      _this._data = deepClone(initialData);\n    } else {\n      _this._data = {};\n    }\n\n    _this._internalObserve(new Path(), _this._data);\n  }\n\n  get data() { return this._data; }\n\n  observe(callback) {\n    this._observers.push(callback);\n  }\n\n  find(path) {\n    let list = path.split('.');\n\n    return this._findWithSplit(list);\n  }\n\n  findBefore(path) {\n    let result = {};\n    let list = path.split('.');\n    result.last = list.pop();\n    result.obj = this._findWithSplit(list);\n\n    return result;\n  }\n\n  _findWithSplit(list) {\n    let obj = this._data;\n    list.forEach((value) => {\n      obj = obj[value];\n    });\n\n    return obj;\n  }\n\n  _fireEvent(event) {\n    this._observers.forEach((callback) => {\n      callback(event);\n    });\n  }\n\n  _isObservable(obj) {\n    if (obj.constructor === Object || obj.constructor === Array) {\n      return true;\n    }\n\n    return false;\n  }\n\n  _internalObserve(path, obj) {\n    let _this = this;\n\n    if (_this._isObservable(obj)) {\n      let handler = (changes) => {\n        _this._onChanges(path, changes);\n      };\n\n      if (obj.constructor === Object) {\n        Object.observe(obj, handler);\n        for (let prop in obj) {\n          if (_this._isObservable(obj[prop])) {\n            _this._internalObserve(path.new(prop), obj[prop]);\n          }\n        }\n      } else if (obj.constructor === Array) {\n        Array.observe(obj, handler);\n        for (let prop in obj) {\n          if (_this._isObservable(obj[prop])) {\n            let np = path.new(new ArrayIndex(obj[prop], prop));\n            _this._internalObserve(np, obj[prop]);\n          }\n        }\n      }\n    }\n  }\n\n  _onChanges(path, changes) {\n    for (let i in changes) {\n      let obj = changes[i].object;\n      let objType;\n\n      if (obj.constructor === Object) {\n        objType = ObjectType.OBJECT;\n      }\n\n      if (obj.constructor === Array) {\n        objType = ObjectType.ARRAY;\n      }\n\n      if (changes[i].type === 'splice') {\n        let idx = changes[i].index;\n        let field = path.new('' + idx);\n        let fieldString = field.toString();\n\n        let removeSize = changes[i].removed.length;\n        if (removeSize !== 0) {\n          let removeValues = changes[i].removed;\n          removeValues.forEach((value, index) => {\n            if (this._isObservable(value)) {\n              path.removeIndex(idx + index);\n            }\n          });\n\n          this._fireEvent({\n            cType: ChangeType.REMOVE,\n            oType: objType,\n            field: fieldString,\n            data: removeSize\n          });\n        }\n\n        let addSize = changes[i].addedCount;\n        if (addSize !== 0) {\n          let addValues = obj.slice(idx, idx + addSize);\n          addValues.forEach((value, index) => {\n            if (this._isObservable(value)) {\n              let np = path.new(new ArrayIndex(value, idx + index));\n              this._internalObserve(np, value);\n            }\n          });\n\n          this._fireEvent({\n            cType: ChangeType.ADD,\n            oType: objType,\n            field: fieldString,\n            data: deepClone(addValues)\n          });\n        }\n\n        //re-define paths...\n        if (idx !== obj.length - 1) {\n          path.reIndexFrom(obj);\n        }\n      } else {\n        let field = path.new(changes[i].name);\n        let fieldString = field.toString();\n\n        if (fieldString.indexOf('Symbol') !== -1) {\n          //hack for PhantomJS2\n          //console.log('SYMBOL: ', changes[i]);\n          continue;\n        }\n\n        //let oldValue = changes[i].oldValue;\n        let newValue = obj[changes[i].name];\n        if (changes[i].type === 'update') {\n          this._fireEvent({\n            cType: ChangeType.UPDATE,\n            oType: objType,\n            field: fieldString,\n            data: deepClone(newValue)\n          });\n        }\n\n        if (changes[i].type === 'add') {\n          this._internalObserve(field, newValue);\n          this._fireEvent({\n            cType: ChangeType.ADD,\n            oType: objType,\n            field: fieldString,\n            data: deepClone(newValue)\n          });\n        }\n\n        if (changes[i].type === 'delete') {\n          this._fireEvent({\n            cType: ChangeType.REMOVE,\n            oType: objType,\n            field: fieldString\n          });\n        }\n      }\n    }\n  }\n}\n\n//dynamic path for Array index...\nclass Path {\n\n  constructor() {\n    this._path = [];\n    this._observables = {}; //<index:ArrayIndex>\n  }\n\n  removeIndex(idx) {\n    //console.log('REMOVE-PATH ' + idx);\n    delete this._observables[idx];\n  }\n\n  reIndexFrom(array) {\n    Object.keys(this._observables).forEach((key) => {\n      let arrayIndex = this._observables[key];\n      let idx = array.indexOf(arrayIndex.obj);\n      if (arrayIndex.idx != idx) {\n        //console.log('RE-INDEX: ' + key + '->' + idx);\n        arrayIndex.idx = idx;\n        delete this._observables[key];\n        this._observables[idx] = arrayIndex;\n      }\n    });\n  }\n\n  new(idx) {\n    if (idx.constructor == ArrayIndex) {\n      //console.log('PATH-OBSERV: ', idx);\n      this._observables[idx.idx] = idx;\n    }\n\n    let nPath = this.clone();\n    nPath._path.push(idx);\n\n    return nPath;\n  }\n\n  clone() {\n    let nPath = new Path();\n    this._path.forEach((value) => {\n      nPath._path.push(value);\n    });\n\n    return nPath;\n  }\n\n  toString() {\n    //TODO: optimize!!\n    let str = '';\n    this._path.forEach((value, index) => {\n      if (index === 0) {\n        str = value.toString();\n      } else {\n        str += '.' + value.toString();\n      }\n    });\n\n    return str;\n  }\n}\n\nclass ArrayIndex {\n\n  constructor(obj, idx) {\n    this.obj = obj;\n    this.idx = idx;\n  }\n\n  toString() {\n    return this.idx.toString();\n  }\n}\n\nexport var ChangeType = {UPDATE: 'update', ADD: 'add', REMOVE: 'remove'};\nexport var ObjectType = {OBJECT: 'object', ARRAY: 'array'};\nexport default SyncObject;\n"],"sourceRoot":"/source/"}