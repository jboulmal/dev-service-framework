{"version":3,"sources":["message-factory/MessageBody.js"],"names":["_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Enum","a","i","keys","reduce","o","k","freeze","v","defineProperty","exports","UPDATE_OPERATION","ATTRIBUTE_TYPE","REASON_PHRASE","RESPONSE_CODE","ExecuteMessageBody","ResponseMessageBody","ForwardMessageBody","UpdateMessageBody","DeleteMessageBody","ReadMessageBody","CreateMessageBody","MessageBody","undefined","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","_RethinkObject2","require","_RethinkObject3","_RethinkObject","idToken","accessToken","resource","schema","assertedIdentity","this","_this","getPrototypeOf","viaURL","Error","via","_MessageBody","policy","_this2","_MessageBody2","attribute","criteriaSyntax","criteria","_this3","_MessageBody3","Array","_this4","childrenResources","_MessageBody4","_this5","attributeType","operation","_MessageBody5","message","_this6","_MessageBody6","code","_this7","description","_MessageBody7","method","params","_this8","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","426","500","501","502","503","504","505","OBJECT","ARRAY","ADD","REMOVE"],"mappings":"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","file":"message-factory/MessageBody.js","sourcesContent":["/**\n * Copyright 2016 PT Inovação e Sistemas SA\n * Copyright 2016 INESC-ID\n * Copyright 2016 QUOBIS NETWORKS SL\n * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n * Copyright 2016 ORANGE SA\n * Copyright 2016 Deutsche Telekom AG\n * Copyright 2016 Apizee\n * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\nimport RethinkObject from '../reTHINKObject/RethinkObject.js';\n\n/**\n * @author alice.cheambe[at]fokus.fraunhofer.de\n * The MessageBody class is the base implementation of the Message Body Data Model from which the other body types extend.\n *\n */\nexport class MessageBody extends RethinkObject {\n\n    /**\n     *\n     * @param {Identity.JWT} idToken - token for Identity assertion purpose\n     * @param {Identity.JWT} accessToken - token for access control\n     * @param {URL.URL} resource - URL of the object\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     *\n     */\n    constructor(idToken, accessToken, resource, schema, assertedIdentity) {\n        super();\n        this.idToken = idToken;\n        this.accessToken = accessToken;\n        this.resource = resource;\n        this.schema = schema;\n        this.assertedIdentity = assertedIdentity;\n    }\n\n    /**\n     * Adds a via URL to the given message body. The \"MessageBody.via\" attribute contains a list of all Protostub\n     * addresses (Protostub) that the message has been passed through. It is used to prevent infinite cycles in the\n     * Hyperty Messaging Framework.\n     * @param {Identity.JWT} token - identity token to include in the message\n     * @return {MessageBody} - the updated message body\n     */\n    addVia(viaURL) {\n        if (!viaURL)\n            throw  new Error(\"via URL to be added, must be provided\");\n        this.via = viaURL;\n        return this;\n    }\n\n}\n\n/**\n * Class representation of the CreateMessageBody object\n */\nexport class CreateMessageBody extends MessageBody {\n\n    /**\n     *\n     * @param {String} value - Contains the created object in JSON format.\n     * @param {URL.URL} policy - URL from where access policy control can be downloaded\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URL} resource - URL of the object\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     */\n    constructor(value, policy, idToken, accessToken, resource, schema, assertedIdentity) {\n        if (!value)\n            throw new Error(\"The value parameter is null\");\n        super(idToken, accessToken, resource, schema, assertedIdentity, schema, assertedIdentity);\n\n        this.value = value;\n        if (policy)\n            this.policy = policy;\n    }\n}\n\n/**\n * Class representation of the ReadMessageBody data object\n */\nexport class ReadMessageBody extends MessageBody {\n    /**\n     *\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URL} resource - URL of the objec\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     * @param {String} attribute - Identifies the attribute in the Object to be read (optional)\n     * @param {String} criteriaSyntax - Defines the criteria syntax used in criteria field. To be used for search purposes.\n     * Valid criteria Syntax are: \"key-value\", \"mongodb\", \"sql\"(?), ...\n     * @param {String} criteria -Defines the criteria to be used for search purposes. Syntax used to define the criteria\n     * is set in the criteriaSyntax.\n     */\n    constructor(idToken, accessToken, resource, schema, assertedIdentity, attribute, criteriaSyntax, criteria) {\n\n        super(idToken, accessToken, resource, schema, assertedIdentity);\n\n        if (attribute)\n            this.attribute = attribute;\n\n        if (criteriaSyntax)\n            this.criteriaSyntax = criteriaSyntax;\n\n        if (criteria)\n            this.criteria = criteria;\n    }\n}\n\n\n/**\n * Class representation of the DeleteMessageBody data object\n */\nexport class DeleteMessageBody extends MessageBody {\n    /**\n     *\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URLList} resource - One or more URLs of objects to be deleted\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     * @param {String} attribute - Identifies the attribute in the Object to be deleted (optional)\n     */\n    constructor(idToken, accessToken, resource, schema, assertedIdentity, attribute) {\n\n        if (resource instanceof Array) {\n            super(idToken, accessToken, null, schema, assertedIdentity);\n            this.childrenResources = resource;\n        } else {\n            super(idToken, accessToken, resource, schema, assertedIdentity);\n        }\n\n        if (attribute) {\n            this.attribute = attribute;\n        }\n    }\n\n}\n\n/**\n * Class representation of the UpdateMessageBody data object\n */\nexport class UpdateMessageBody extends MessageBody {\n    /**\n     * Constructor to create the object\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URL} resource - URL of the object\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     * @param {String} attribute - Identifies the attribute in the Object to be updated (optional)\n     * @param {String} value - Contains the updated value object in JSON format.\n     */\n    constructor(idToken, accessToken, resource, schema, assertedIdentity, attribute, value) {\n\n        super(idToken, accessToken, resource, schema, assertedIdentity);\n        this.attribute = attribute;\n        this.value = value;\n    }\n\n    addAttributeType(attributeType) {\n        if (attributeType)\n            this.attributeType = attributeType;\n    }\n\n    addOperation(operation) {\n        if (operation)\n            this.operation = operation;\n    }\n}\n\n/**\n * Class representation of the ForwardMessageBody data object\n */\nexport class ForwardMessageBody extends MessageBody {\n    /**\n     * Constructor to create the object\n     *\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URL} resource - URL of the object\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     * @param {Message} message - Message to be forwarded\n     */\n    constructor(idToken, accessToken, resource, schema, assertedIdentity, message) {\n\n\n        super(idToken, accessToken, resource, schema, assertedIdentity);\n\n        this.message = message;\n    }\n}\n\n/**\n * Class representation of the ResponseMessageBody data object\n */\nexport class ResponseMessageBody extends MessageBody {\n\n    /**\n     * Constructor to create the object\n     *\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URL} resource - URL of the object\n     * @param code - A response code compliant with HTTP response codes (RFC7231)\n     * @param value - Contains a data value in JSON format. Applicable to Responses to READ MessageType.\n     */\n    constructor(idToken, accessToken, resource, code, value) {\n\n        super(idToken, accessToken, resource);\n\n        if (code) {\n            this.code = code;\n            this.description = REASON_PHRASE[code];\n        }\n        if (value)\n            this.value = value;\n\n    }\n}\n\n/**\n * Class representation of the ExecuteMessageBoday data Object. Contains the name of method to be invoked and an array\n * and an Array of objects to be passed as parameters to the defined method. This is compliant with JSON-RPC Spec.\n */\nexport class ExecuteMessageBody extends MessageBody {\n\n    /**\n     * Constructor to create the object\n     *\n     * @param {Identity.JWT} idToken -\n     * @param {Identity.JWT} accessToken\n     * @param {URL.URL} resource - URL of the object\n     * @param {URL.HypertyCatalogueURL} schema - URL of the Data object schema stored in the Catalogue\n     * @param {Identity.Identity} assertedIdentity - AssertedIdentity is compliant with User Identity Data Model\n     * @param {Message} message - Message to be forwarded\n     */\n    constructor(idToken, accessToken, resource, schema, assertedIdentity, method, params) {\n\n        super(idToken, accessToken, resource, schema, assertedIdentity);\n\n        this.method = method;\n        if (params) {\n            if (params instanceof Array)\n                this.params = params;\n            else\n                this.params = [params];\n        }\n    }\n\n}\n\nexport function Enum(a) {\n    let i = Object\n        .keys(a)\n        .reduce((o, k)=>(o[a[k]] = k, o), {});\n\n    return Object.freeze(\n        Object.keys(a).reduce(\n            (o, k)=>(o[k] = a[k], o), v=>i[v]\n        )\n    );\n}\n\n/**\n * Represents response code compliant with HTTP response codes (RFC7231).\n */\nexport const RESPONSE_CODE = Enum({\n    100: '100',\n    101: '101',\n    200: '200',\n    201: '201',\n    202: '202',\n    203: '203',\n    204: '204',\n    205: '205',\n    206: '206',\n    300: '300',\n    301: '301',\n    302: '302',\n    303: '303',\n    304: '304',\n    305: '305',\n    307: '307',\n    400: '400',\n    401: '401',\n    402: '402',\n    403: '403',\n    404: '404',\n    405: '405',\n    406: '406',\n    407: '407',\n    408: '408',\n    409: '409',\n    410: '410',\n    411: '411',\n    412: '412',\n    413: '413',\n    414: '414',\n    415: '415',\n    416: '416',\n    417: '417',\n    426: '426',\n    500: '500',\n    501: '501',\n    502: '502',\n    503: '503',\n    504: '504',\n    505: '505'\n});\n\n/**\n * Represents response phrases to response code compliant with HTTP response codes (RFC7231).\n */\nexport const REASON_PHRASE = Enum({\n    100: 'Continue',\n    101: 'Switching Protocols',\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Payload Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable',\n    417: 'Expectation Failed',\n    426: 'Upgrade Required',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Time-out',\n    505: 'HTTP Version Not Supported'\n});\n\n\nexport const ATTRIBUTE_TYPE = Enum({\n    OBJECT: 'OBJECT',\n    ARRAY: 'ARRAY'\n});\n\nexport const UPDATE_OPERATION = Enum({\n    ADD: 'ADD',\n    REMOVE: 'REMOVE'\n});\n\nexport default MessageBody;\n"],"sourceRoot":"/source/"}