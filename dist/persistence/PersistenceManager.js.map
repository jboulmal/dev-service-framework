{"version":3,"sources":["persistence/PersistenceManager.js"],"names":["_interopRequireDefault","obj","__esModule","default","Object","defineProperty","exports","value","_universalLocalstorage","require","_universalLocalstorage2","persistenceManager","set","key","version","setItem","JSON","stringify","get","parse","getItem","e","getVersion","delete","removeItem","module"],"mappings":"AAAA,YAAgN,SAASA,wBAAuBC,GAAK,MAAOA,IAAKA,EAAIC,WAAWD,GAAKE,UAAQF,GAAhRG,OAAOC,eAAeC,QAAQ,cAAcC,OAAM,GAsB/D,IAAAC,wBAAAC,QAAA,4BAtByIC,wBAAwBV,uBAAuBQ,wBAwBlLG,oBACFC,IAAK,SAACC,EAAKC,EAASP,GAChBG,wBAAAA,WAAaK,QAAQF,EAAKG,KAAKC,WAAWH,QAAWA,EAASP,MAASA,MAG3EW,IAAK,SAACL,GACF,IACI,MAAOG,MAAKG,MAAMT,wBAAAA,WAAaU,QAAQP,IAAMN,MAC/C,MAAOc,MAKbC,WAAY,SAACT,GACT,IACI,MAAOG,MAAKG,MAAMT,wBAAAA,WAAaU,QAAQP,IAAMC,QAC/C,MAAOO,MAKbE,SAAQ,SAACV,GACLH,wBAAAA,WAAac,WAAWX,IAvB7BP,SAAAA,WA2BYK,mBA3BuBc,OAAOnB,QAAQA,QAAQ","file":"persistence/PersistenceManager.js","sourcesContent":["/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\nimport localStorage from './universal-localstorage'\n\nconst persistenceManager = {\n    set: (key, version, value) => {\n        localStorage.setItem(key, JSON.stringify({'version': version, 'value': value}))\n    },\n\n    get: (key) => {\n        try {\n            return JSON.parse(localStorage.getItem(key)).value\n        } catch (e) {\n            // return undefined\n        }\n    },\n\n    getVersion: (key) => {\n        try {\n            return JSON.parse(localStorage.getItem(key)).version\n        } catch (e) {\n            // return undefined\n        }\n    },\n\n    delete: (key) => {\n        localStorage.removeItem(key)\n    }\n};\n\nexport default persistenceManager\n"],"sourceRoot":"/source/"}